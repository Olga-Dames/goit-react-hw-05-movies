{"version":3,"file":"static/js/387.f8421270.chunk.js","mappings":"yQAEaA,EAAWC,EAAAA,GAAAA,GAAH,iLAURC,EAAWD,EAAAA,GAAAA,GAAH,2EAORE,EAAYF,EAAAA,GAAAA,GAAH,iGAOTG,EAAUH,EAAAA,GAAAA,EAAH,wGAQPI,EAASJ,EAAAA,GAAAA,IAAH,8CAINK,EAAOL,EAAAA,GAAAA,GAAH,6D,SCUjB,EAzCe,WACb,IAAQM,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAOA,OALAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,UAAcN,GAASO,MAAK,SAAAC,GAAI,OAAIJ,EAAQI,EAAKL,KAAjB,GACjC,GAAE,CAACH,IACJS,QAAQC,IAAIP,GAGVA,IACE,4BACE,SAACP,EAAD,sCACA,SAACH,EAAD,UACGU,EAAKQ,KAAI,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,UAAWC,EAA5B,EAA4BA,KAAMC,EAAlC,EAAkCA,GAAlC,OACR,UAACpB,EAAD,WACoB,OAAjBiB,GACC,SAACd,EAAD,CACEkB,IAAG,yCAAoCJ,GACvCK,IAAKJ,EACLK,MAAM,QACNC,OAAO,WAGT,SAACrB,EAAD,CACEkB,IAAKI,EACLH,IAAKJ,EACLK,MAAM,QACNC,OAAO,WAGX,SAACpB,EAAD,UAAOe,KACP,UAACjB,EAAD,yBAAqBgB,OAjBRE,EADP,QAyBnB,C,kEC7CDM,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACpBC,QAAS,oCAGX,IAAMC,EAAmB,mCAAG,oGACFF,EAAAA,EAAAA,IAAU,qBADR,cAClBG,EADkB,yBAEjBA,EAAShB,KAAKiB,SAFG,2CAAH,qDAKnBC,EAAkB,mCAAG,WAAOC,GAAP,uFACFN,EAAAA,EAAAA,IAAA,8BAAiCM,IAD/B,cACnBH,EADmB,yBAElBA,EAAShB,MAFS,2CAAH,sDAKjBoB,EAAc,mCAAG,WAAOb,GAAP,uFACCM,EAAAA,EAAAA,IAAA,iBAAoBN,IADrB,cAChBS,EADgB,yBAEfA,EAAShB,MAFM,2CAAH,sDAKdqB,EAAS,mCAAG,WAAOd,GAAP,uFACMM,EAAAA,EAAAA,IAAA,iBAAoBN,EAApB,aADN,cACXS,EADW,yBAEVA,EAAShB,MAFC,2CAAH,sDAKTsB,EAAY,mCAAG,WAAOf,GAAP,uFACGM,EAAAA,EAAAA,IAAA,iBAAoBN,EAApB,aADH,cACdS,EADc,yBAEbA,EAAShB,MAFI,2CAAH,sDAKbF,EAAM,CACViB,oBAAAA,EACAG,mBAAAA,EACAE,eAAAA,EACAC,UAAAA,EACAC,aAAAA,GAGF,K","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","service/serviceAPI.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const CastList = styled.ul`\n  list-style: none;\n  border: 2px solid olive;\n  padding: 30px 100px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 20px;\n`;\n\nexport const CastItem = styled.li`\n  margin-bottom: 30px;\n  \n  overflow: hidden;\n\n`;\n\nexport const CastTitle = styled.h2`\n  margin: 0;\n  font-size: 24px;\n  color: navy;\n  text-align: center;\n`;\n\nexport const Content = styled.p`\n  line-height: 1.3;\n  margin: 0;\n  font-size: 18px;\n  text-align: center;\n\n`;\n\nexport const Poster = styled.img`\nborder-radius: 30px;\n`;\n\nexport const Name = styled.h4`\n  margin: 0;\n  text-align: center;\n`;","import PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport api from 'service/serviceAPI';\nimport noPhoto from '../../images/no-poster-available.jpg';\nimport { CastItem, CastList, CastTitle, Content, Poster, Name } from './Cast.styled';\n\n  const Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    api.fetchCast(movieId).then(data => setCast(data.cast));\n  }, [movieId]);\n  console.log(cast);\n\n  return (\n    cast && (\n      <div>\n        <CastTitle>Additional information</CastTitle>\n        <CastList>\n          {cast.map(({ profile_path, character, name, id }) => (\n            <CastItem key={id}>\n              {profile_path !== null ? (\n                <Poster\n                  src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n                  alt={character}\n                  width=\"200px\"\n                  height=\"300px\"\n                />\n              ) : (\n                <Poster\n                  src={noPhoto}\n                  alt={character}\n                  width=\"200px\"\n                  height=\"300px\"\n                />\n              )}\n              <Name>{name}</Name>\n              <Content>Character: {character}</Content>\n            </CastItem>\n          ))}\n        </CastList>\n      </div>\n    )\n  );\n};\n\nexport default Cast;\n\n\nCast.propTypes = {\n  id: PropTypes.number.isRequired,\n  profile_path: PropTypes.string.isRequired,\n  character: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n};","import axios from \"axios\";\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n    api_key: 'e2aff662c395c2714c9c8f21667cff02',\n  };\n\n  const fetchTrendingMovies = async () => {\n      const response= await axios.get('/trending/all/day'); \n      return response.data.results\n    } \n\n  const fetchSearchedMovie = async (query) => {\n    const response = await axios.get(`/search/movie?query=${query}`);\n    return response.data\n   }\n\n   const fetchMovieById = async (id) => {\n    const response = await axios.get(`/movie/${id}`);\n    return response.data\n   }\n\n   const fetchCast = async (id) => {\n    const response = await axios.get(`/movie/${id}/credits`);\n    return response.data\n   }\n\n   const fetchReviews = async (id) => {\n    const response = await axios.get(`/movie/${id}/reviews`);\n    return response.data\n   }\n   \n  const api = {\n    fetchTrendingMovies,\n    fetchSearchedMovie,\n    fetchMovieById,\n    fetchCast,\n    fetchReviews\n  };\n  \n  export default api;"],"names":["CastList","styled","CastItem","CastTitle","Content","Poster","Name","movieId","useParams","useState","cast","setCast","useEffect","api","then","data","console","log","map","profile_path","character","name","id","src","alt","width","height","noPhoto","axios","api_key","fetchTrendingMovies","response","results","fetchSearchedMovie","query","fetchMovieById","fetchCast","fetchReviews"],"sourceRoot":""}