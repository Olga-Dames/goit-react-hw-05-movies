{"version":3,"file":"static/js/304.db9854e1.chunk.js","mappings":"8OAGaA,EAAOC,EAAAA,GAAAA,GAAH,kJASJC,EAAOD,EAAAA,GAAAA,GAAH,qFAMJE,EAASF,EAAAA,GAAAA,IAAH,wIASNG,EAAaH,EAAAA,GAAAA,EAAH,gMAYVI,GAAYJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,kD,SCFtB,EA/BkB,SAAC,GAAgB,IAAdM,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACT,EAAD,UACGO,EAAOG,KAAI,SAAAC,GAAK,OACf,SAACT,EAAD,WACE,UAACG,EAAD,CAAWO,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAArD,UACyB,OAAtBG,EAAMK,aACL,SAACb,EAAD,CACEc,IAAG,yCAAoCN,EAAMK,aAC7CE,IAAKP,EAAMQ,MACXC,MAAO,IACPC,OAAQ,OAGV,SAAClB,EAAD,CACEc,IAAKK,EACLJ,IAAKP,EAAMQ,MACXC,MAAM,QACNC,OAAO,WAGX,SAACjB,EAAD,UAAaO,EAAMY,KAAOZ,EAAMY,KAAOZ,EAAMQ,YAjBtCR,EAAME,GADF,KAwBtB,C,iKCjCYW,E,QAAUvB,GAAAA,GAAH,0H,SC2BpB,EAxBa,WACX,OAA4BwB,EAAAA,EAAAA,UAAS,IAArC,eAAOlB,EAAP,KAAemB,EAAf,MAEAC,EAAAA,EAAAA,YAAU,WACRC,GACD,GAAE,IAEH,IAAMA,EAAS,mCAAG,6GAEOC,EAAAA,EAAAA,sBAFP,OAERtB,EAFQ,OAGdmB,GAAU,OAAInB,IAHA,gDAKduB,QAAQC,IAAI,KAAMC,SALJ,yDAAH,qDASf,OACE,6BACE,SAACR,EAAD,+CACA,SAACS,EAAA,EAAD,CAAW1B,OAAQA,MAGxB,C,kEC1BD2B,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACpBC,QAAS,oCAGX,IAAMC,EAAmB,mCAAG,oGACFF,EAAAA,EAAAA,IAAU,qBADR,cAClBG,EADkB,yBAEjBA,EAASC,KAAKC,SAFG,2CAAH,qDAKnBC,EAAkB,mCAAG,WAAOC,GAAP,uFACFP,EAAAA,EAAAA,IAAA,8BAAiCO,IAD/B,cACnBJ,EADmB,yBAElBA,EAASC,MAFS,2CAAH,sDAKjBI,EAAc,mCAAG,WAAO7B,GAAP,uFACCqB,EAAAA,EAAAA,IAAA,iBAAoBrB,IADrB,cAChBwB,EADgB,yBAEfA,EAASC,MAFM,2CAAH,sDAKdK,EAAS,mCAAG,WAAO9B,GAAP,uFACMqB,EAAAA,EAAAA,IAAA,iBAAoBrB,EAApB,aADN,cACXwB,EADW,yBAEVA,EAASC,MAFC,2CAAH,sDAKTM,EAAY,mCAAG,WAAO/B,GAAP,uFACGqB,EAAAA,EAAAA,IAAA,iBAAoBrB,EAApB,aADH,cACdwB,EADc,yBAEbA,EAASC,MAFI,2CAAH,sDAKbT,EAAM,CACVO,oBAAAA,EACAI,mBAAAA,EACAE,eAAAA,EACAC,UAAAA,EACAC,aAAAA,GAGF,K","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx","service/serviceAPI.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const List = styled.ul`\n  list-style: none;\n  margin-top: 30px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 25px;\n`;\n\nexport const Item = styled.li`\n  width: 250px;\n  border-radius: 5px;\n  overflow: hidden;\n`;\n\nexport const Poster = styled.img`\n  object-fit: c cover;\n  transition: transform 250ms linear;\n\n  &:hover {\n    transform: scale(1.04);\n  }\n`;\n\nexport const MovieTitle = styled.p`\n  text-align: center;\n  color: #212121;\n  font-size: 20px;\n  transition: color 250ms linear;\n\n  &:hover {\n    color: navy;\n    text-decoration: underline;\n  }\n`;\n\nexport const MovieLink = styled(NavLink)`\n  text-decoration: none;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types'\nimport { useLocation } from 'react-router-dom';\nimport noPhoto from '../../images/no-poster-available.jpg';\nimport { List, Item, Poster, MovieTitle, MovieLink } from './MovieList.styled';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies.map(movie => (\n        <Item key={movie.id}>\n          <MovieLink to={`/movies/${movie.id}`} state={{ from: location }}>\n            {movie.poster_path !== null ? (\n              <Poster\n                src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n                alt={movie.title}\n                width={250}\n                height={350}\n              />\n            ) : (\n              <Poster\n                src={noPhoto}\n                alt={movie.title}\n                width=\"250px\"\n                height=\"350px\"\n              />\n            )}\n            <MovieTitle>{movie.name ? movie.name : movie.title}</MovieTitle>\n          </MovieLink>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string,\n      title: PropTypes.string,\n      name: PropTypes.string,\n    }).isRequired\n  ).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Heading = styled.h1`\n  margin: 0;\n  padding-top: 20px;\n  text-align: center;\n  font-size: 32px;\n  color: #050482;\n`;\n","import { useState, useEffect } from 'react';\nimport api from 'service/serviceAPI';\nimport MovieList from 'components/MovieList/MovieList';\nimport {Heading} from './Home.styled'\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    getMovies();\n  }, []);\n\n  const getMovies = async () => {\n    try {\n      const movies = await api.fetchTrendingMovies();\n      setMovies([...movies]);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  return (\n    <main>\n      <Heading>Movies which are trending today</Heading>\n      <MovieList movies={movies} />\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from \"axios\";\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n    api_key: 'e2aff662c395c2714c9c8f21667cff02',\n  };\n\n  const fetchTrendingMovies = async () => {\n      const response= await axios.get('/trending/all/day'); \n      return response.data.results\n    } \n\n  const fetchSearchedMovie = async (query) => {\n    const response = await axios.get(`/search/movie?query=${query}`);\n    return response.data\n   }\n\n   const fetchMovieById = async (id) => {\n    const response = await axios.get(`/movie/${id}`);\n    return response.data\n   }\n\n   const fetchCast = async (id) => {\n    const response = await axios.get(`/movie/${id}/credits`);\n    return response.data\n   }\n\n   const fetchReviews = async (id) => {\n    const response = await axios.get(`/movie/${id}/reviews`);\n    return response.data\n   }\n   \n  const api = {\n    fetchTrendingMovies,\n    fetchSearchedMovie,\n    fetchMovieById,\n    fetchCast,\n    fetchReviews\n  };\n  \n  export default api;"],"names":["List","styled","Item","Poster","MovieTitle","MovieLink","NavLink","movies","location","useLocation","map","movie","to","id","state","from","poster_path","src","alt","title","width","height","noPhoto","name","Heading","useState","setMovies","useEffect","getMovies","api","console","log","message","MovieList","axios","api_key","fetchTrendingMovies","response","data","results","fetchSearchedMovie","query","fetchMovieById","fetchCast","fetchReviews"],"sourceRoot":""}