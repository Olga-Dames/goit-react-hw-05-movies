{"version":3,"file":"static/js/779.edc6ed93.chunk.js","mappings":"6SAEaA,EAAaC,EAAAA,GAAAA,GAAH,qEAKVC,EAAaD,EAAAA,GAAAA,GAAH,gDAIVE,EAAcF,EAAAA,GAAAA,GAAH,0EAMXG,EAAUH,EAAAA,GAAAA,EAAH,iEAKPI,EAAOJ,EAAAA,GAAAA,GAAH,kG,SC2BjB,EApCgB,WACd,IAAQK,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,mCAAG,uGAEZC,EAAAA,EAAAA,aAAiBP,GAASQ,MAAK,SAAAC,GAAI,OAAIL,EAAWK,EAAKC,QAApB,IAFvB,sDAIlBC,QAAQC,IAAI,KAAMC,SAJA,wDAAH,qDAOnBP,EAAcN,EACf,GAAE,CAACA,KAGF,SAACN,EAAD,UACGS,EAAQW,OAAS,EAChBX,EAAQY,KAAI,YAA0C,IAAvCC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,WAClC,OACE,UAACvB,EAAD,YACE,UAACC,EAAD,sBAAsBmB,MACtB,SAACjB,EAAD,WACE,SAAC,IAAD,CAAQqB,OAAO,aAAf,SAA6BD,OAE/B,SAACrB,EAAD,UAAUmB,MALKC,EAQpB,KAED,2EAIP,C,kEC9CDG,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACpBC,QAAS,oCAGX,IAAMC,EAAmB,mCAAG,oGACFF,EAAAA,EAAAA,IAAU,qBADR,cAClBG,EADkB,yBAEjBA,EAASf,KAAKC,SAFG,2CAAH,qDAKnBe,EAAkB,mCAAG,WAAOC,GAAP,uFACFL,EAAAA,EAAAA,IAAA,8BAAiCK,IAD/B,cACnBF,EADmB,yBAElBA,EAASf,MAFS,2CAAH,sDAKjBkB,EAAc,mCAAG,WAAOT,GAAP,uFACCG,EAAAA,EAAAA,IAAA,iBAAoBH,IADrB,cAChBM,EADgB,yBAEfA,EAASf,MAFM,2CAAH,sDAKdmB,EAAS,mCAAG,WAAOV,GAAP,uFACMG,EAAAA,EAAAA,IAAA,iBAAoBH,EAApB,aADN,cACXM,EADW,yBAEVA,EAASf,MAFC,2CAAH,sDAKToB,EAAY,mCAAG,WAAOX,GAAP,uFACGG,EAAAA,EAAAA,IAAA,iBAAoBH,EAApB,aADH,cACdM,EADc,yBAEbA,EAASf,MAFI,2CAAH,sDAKbF,EAAM,CACVgB,oBAAAA,EACAE,mBAAAA,EACAE,eAAAA,EACAC,UAAAA,EACAC,aAAAA,GAGF,K","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","service/serviceAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewList = styled.ul`\n  list-style: none;\n  padding: 30px 100px;\n`;\n\nexport const ReviewItem = styled.li`\n  margin-bottom: 50px;\n`;\n\nexport const ReviewTitle = styled.h4`\n  margin: 0;\n  font-size: 24px;\n  color: navy;\n`;\n\nexport const Content = styled.p`\n  line-height: 1.3;\n  font-size: 18px;\n`;\n\nexport const Time = styled.h6`\n  margin: 0;\n  padding-bottom: 15px;\n  border-bottom: 1px solid olive;\n`;\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport api from 'service/serviceAPI';\nimport Moment from 'react-moment';\nimport {\n  Content,\n  ReviewList,\n  ReviewItem,\n  ReviewTitle,\n  Time,\n} from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const getReviewInfo = async () => {\n      try {\n        await api.fetchReviews(movieId).then(data => setReviews(data.results));\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    getReviewInfo(movieId);\n  }, [movieId]);\n\n  return (\n    <ReviewList>\n      {reviews.length > 0 ? (\n        reviews.map(({ author, content, id, created_at }) => {\n          return (\n            <ReviewItem key={id}>\n              <ReviewTitle>Author: {author}</ReviewTitle>\n              <Time>\n                <Moment format=\"YYYY/MM/DD\">{created_at}</Moment>\n              </Time>\n              <Content>{content}</Content>\n            </ReviewItem>\n          );\n        })\n      ) : (\n        <p>Sorry, there is no reviews for this movie yet </p>\n      )}\n    </ReviewList>\n  );\n};\n\nexport default Reviews;\n\n\n\nReviews.propTypes = {\n  id: PropTypes.number.isRequired,\n  author: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n  created_at: PropTypes.string.isRequired,\n};","import axios from \"axios\";\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n    api_key: 'e2aff662c395c2714c9c8f21667cff02',\n  };\n\n  const fetchTrendingMovies = async () => {\n      const response= await axios.get('/trending/all/day'); \n      return response.data.results\n    } \n\n  const fetchSearchedMovie = async (query) => {\n    const response = await axios.get(`/search/movie?query=${query}`);\n    return response.data\n   }\n\n   const fetchMovieById = async (id) => {\n    const response = await axios.get(`/movie/${id}`);\n    return response.data\n   }\n\n   const fetchCast = async (id) => {\n    const response = await axios.get(`/movie/${id}/credits`);\n    return response.data\n   }\n\n   const fetchReviews = async (id) => {\n    const response = await axios.get(`/movie/${id}/reviews`);\n    return response.data\n   }\n   \n  const api = {\n    fetchTrendingMovies,\n    fetchSearchedMovie,\n    fetchMovieById,\n    fetchCast,\n    fetchReviews\n  };\n  \n  export default api;"],"names":["ReviewList","styled","ReviewItem","ReviewTitle","Content","Time","movieId","useParams","useState","reviews","setReviews","useEffect","getReviewInfo","api","then","data","results","console","log","message","length","map","author","content","id","created_at","format","axios","api_key","fetchTrendingMovies","response","fetchSearchedMovie","query","fetchMovieById","fetchCast","fetchReviews"],"sourceRoot":""}